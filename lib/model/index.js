// Generated by CoffeeScript 1.6.3
(function() {
  var Collection, Model, backbone, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  backbone = require('backbone');

  exports.Model = Model = (function(_super) {
    __extends(Model, _super);

    function Model() {
      _ref = Model.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    return Model;

  })(backbone.Model);

  exports.Collection = Collection = (function(_super) {
    __extends(Collection, _super);

    function Collection(parent) {
      this.parent = parent;
      Collection.__super__.constructor.call(this);
    }

    Collection.prototype.destroy = function() {
      return this.parent = null;
    };

    Collection.prototype.add = function() {
      var args, data, model;
      data = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      if ((this.model == null) || data instanceof backbone.Model) {
        return Collection.__super__.add.apply(this, [data].concat(__slice.call(args)));
      }
      if (!(data instanceof backbone.Model)) {
        model = new this.model(data);
      }
      model.world = this.parent.world;
      return Collection.__super__.add.apply(this, [model].concat(__slice.call(args)));
    };

    return Collection;

  })(backbone.Collection);

}).call(this);
