// Generated by CoffeeScript 1.6.3
/*
Web-based Mud Client Service
*/


(function() {
  var EventEmitter, MudClientService, MudClientSession, io;

  io = require('socket.io');

  EventEmitter = require('events').EventEmitter;

  exports.MudClientSession = MudClientSession = (function() {
    function MudClientSession(service, term) {
      var _this = this;
      this.service = service;
      this.term = term;
      this.term.on('disconnect', function() {
        return _this.onDisconnect;
      });
      this.term.on('data', function(data) {
        return _this.onTermData(data);
      });
      this.term.emit('data', "Connected to Mud Client from " + this.term.id + "\r\n");
    }

    MudClientSession.prototype.onDisconnect = function() {
      return this.service.unregisterSession(this);
    };

    MudClientSession.prototype.onTermData = function(data) {};

    MudClientSession.prototype.onMudData = function(data) {
      return this.term.emit('data', data);
    };

    MudClientSession.prototype.onMudDisconnect = function() {
      this.term.emit('data', '\n\nConnection terminated by server');
      return this.term.disconnect();
    };

    return MudClientSession;

  })();

  exports.MudClientService = MudClientService = (function() {
    function MudClientService(service) {
      var _this = this;
      this.service = service;
      this.service.on('connection', function(socket) {
        return _this.registerSession(socket);
      });
      this.sessions = {};
    }

    MudClientService.prototype.registerSession = function(socket) {
      var session;
      session = new MudClientSession(this, socket);
      return this.sessions[socket.id] = session;
    };

    MudClientService.prototype.unregisterSession = function(session) {
      return delete this.sessions[session.term.id];
    };

    return MudClientService;

  })();

}).call(this);
