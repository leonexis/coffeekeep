// Generated by CoffeeScript 1.6.3
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  exports.command = {
    name: 'go',
    aliases: ['north', 'east', 'south', 'west', 'up', 'down', 'northwest', 'northeast', 'southeast', 'southwest', 'n', 'e', 's', 'w', 'u', 'd', 'nw', 'ne', 'se', 'sw', 'in', 'out', 'vortex', 'enter', 'leave'],
    description: "Moves in the specified direction",
    help: "Usage: [go] <direction>",
    action: function(context, request) {
      var area, areaId, args, direction, link, mob, newArea, newRoom, room, roomId, verb, world, _ref;
      mob = context.mob, room = context.room, world = context.world, area = context.area;
      verb = request.verb, args = request.args;
      if (verb === 'go') {
        if (args.length < 1) {
          mob.print("Go where?");
          return;
        }
        verb = args[0].toLowerCase();
      }
      direction = (function() {
        switch (verb) {
          case 'north':
          case 'n':
            return 'north';
          case 'east':
          case 'e':
            return 'east';
          case 'south':
          case 's':
            return 'south';
          case 'west':
          case 'w':
            return 'west';
          case 'up':
          case 'u':
            return 'up';
          case 'down':
          case 'd':
            return 'down';
          case 'northwest':
          case 'nw':
            return 'northwest';
          case 'northeast':
          case 'ne':
            return 'northeast';
          case 'southeast':
          case 'se':
            return 'southeast';
          case 'southwest':
          case 'sw':
            return 'southwest';
          case 'enter':
          case 'in':
            return 'enter';
          case 'leave':
          case 'out':
            return 'leave';
          case 'vortex':
            return 'vortex';
          default:
            return null;
        }
      })();
      if (direction == null) {
        mob.print("That isn't a valid direction.");
        return;
      }
      link = room.get('links')[direction];
      if (link == null) {
        mob.print("You can't go that way.");
        return;
      }
      if (__indexOf.call(link.room, '#') >= 0) {
        _ref = link.room.split('#'), areaId = _ref[0], roomId = _ref[1];
        newArea = world.areas.get('areaId');
        if (newArea == null) {
          console.error("Link to non-loaded area in " + (room.getLocationId()) + "->" + direction + ": " + link.room);
          mob.print("A dark energy prevents you from going that way.");
          return;
        }
        newRoom = newArea.get(roomId);
        if (newRoom == null) {
          console.error("Link to non-existant room in a different area. Out of date link? " + (room.getLocationId()) + "->" + direction + ": " + link.room);
          mob.print("A dark energy prevents you from going that way.");
          return;
        }
      } else {
        newRoom = area.rooms.get(link.room);
        if (newRoom == null) {
          console.error("Link to room in same area does not exist. " + (room.getLocationId()) + "->" + direction + ": " + link.room);
          mob.print("A dark energy prevents you from going that way.");
          return;
        }
      }
      mob.setLocation(newRoom);
      return mob.doCommand('look');
    }
  };

}).call(this);
